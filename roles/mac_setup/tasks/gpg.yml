- name: Comprehensive GPG Setup
  block:
    - name: Ensure GPG is installed
      homebrew:
        name: gnupg
        state: present

    - name: Ensure GPG directory exists
      file:
        path: "{{ ansible_env.HOME }}/.gnupg"
        state: directory
        mode: '0700'

    - name: Configure GPG agent
      copy:
        dest: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
        content: |
          default-cache-ttl 3600
          max-cache-ttl 8hours
          pinentry-program /usr/local/bin/pinentry-mac
        mode: '0600'

    - name: Install pinentry-mac
      homebrew:
        name: pinentry-mac
        state: present

    - name: Configure GPG
      copy:
        dest: "{{ ansible_env.HOME }}/.gnupg/gpg.conf"
        content: |
          use-agent
          personal-cipher-preferences AES256 AES192 AES
          personal-digest-preferences SHA512 SHA384 SHA256
          personal-compress-preferences ZLIB BZIP2 ZIP Uncompressed
          default-preference-list SHA512 SHA384 SHA256 AES256 AES192 AES ZLIB BZIP2 ZIP Uncompressed
          cert-digest-algo SHA512
          s2k-cipher-algo AES256
          s2k-digest-algo SHA512
          charset utf-8
          fixed-list-mode
          no-comments
          no-emit-version
          keyid-format 0xlong
          list-options show-uid-validity
          verify-options show-uid-validity
          with-fingerprint
          require-cross-certification
          no-symkey-cache
          use-agent
          throw-keyids
        mode: '0600'

    - name: Generate GPG key
      expect:
        command: gpg --full-generate-key --batch
        responses:
          'Key-Type:': 'RSA'
          'Key-Length:': '4096'
          'Name-Real:': '{{ gpg_name }}'
          'Name-Email:': '{{ gpg_email }}'
          'Expire-Date:': '0'
        creates: "{{ ansible_env.HOME }}/.gnupg/trustdb.gpg"
      environment:
        GNUPGHOME: "{{ ansible_env.HOME }}/.gnupg"
      vars:
        gpg_name: "Your Name"  # Replace with your name
        gpg_email: "your.email@example.com"  # Replace with your email

    - name: Get GPG key ID
      shell: gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | awk -F'/' '{print $2}'
      register: gpg_key_id
      changed_when: false

    - name: Configure Git to use GPG
      git_config:
        name: "{{ item.name }}"
        scope: global
        value: "{{ item.value }}"
      loop:
        - { name: 'user.signingkey', value: '{{ gpg_key_id.stdout }}' }
        - { name: 'commit.gpgsign', value: 'true' }
        - { name: 'tag.gpgsign', value: 'true' }

    - name: Add GPG key to GitHub
      command: gh auth refresh -s write:gpg_key
      changed_when: false

    - name: Export public GPG key
      shell: gpg --armor --export {{ gpg_key_id.stdout }}
      register: gpg_public_key
      changed_when: false

    - name: Add GPG key to GitHub
      command: gh gpg-key add -
      args:
        stdin: "{{ gpg_public_key.stdout }}"
      register: gh_add_gpg_key
      changed_when: "'already exists' not in gh_add_gpg_key.stderr"
      failed_when:
        - gh_add_gpg_key.rc != 0
        - "'already exists' not in gh_add_gpg_key.stderr"

    - name: Add GPG configuration to .zshrc
      blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: |
          export GPG_TTY=$(tty)
          gpgconf --launch gpg-agent

  rescue:
    - name: Display error message
      debug:
        msg: "GPG setup failed. Please check the error messages and try again."

  always:
    - name: Ensure .gnupg directory has correct permissions
      file:
        path: "{{ ansible_env.HOME }}/.gnupg"
        state: directory
        mode: '0700'
        owner: "{{ ansible_env.USER }}"