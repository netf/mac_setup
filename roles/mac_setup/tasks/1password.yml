---
- name: Configure 1Password
  block:
    - name: Check if 1Password configuration is requested
      ansible.builtin.set_fact:
        configure_1password: "{{ onepassword_email | default('') | length > 0 }}"

    - name: Display 1Password configuration status
      ansible.builtin.debug:
        msg: "1Password configuration is {{ 'enabled' if configure_1password else 'disabled' }}"

    - name: Ensure 1Password is installed
      homebrew_cask:
        name: 1password
        state: present
      when: configure_1password

    - name: Install 1Password CLI
      homebrew:
        name: 1password-cli
        state: present
      when: configure_1password

    - name: Check if 1Password CLI is configured
      ansible.builtin.command: op account list
      register: op_account_list
      changed_when: false
      failed_when: false
      when: configure_1password

    - name: Configure 1Password CLI
      ansible.builtin.command: |
        op account add --address my.1password.com --email "{{ onepassword_email }}" --shorthand {{ onepassword_shorthand | default('my1password') }}
      when:
        - configure_1password
        - op_account_list.rc != 0
      register: op_config_result
      changed_when: op_config_result.rc == 0

    - name: Display 1Password CLI configuration result
      ansible.builtin.debug:
        var: op_config_result
      when: op_config_result is defined

    - name: Check if GitHub SSH key exists in Personal vault
      ansible.builtin.shell: |
        op item get "GitHub SSH Key" --vault Personal || true
      register: github_ssh_key_check
      changed_when: false
      when: configure_1password

    - name: Create GitHub SSH key in 1Password Personal vaul
      ansible.builtin.shell: |
        set -o pipefail
        output=$(echo "Github SSH Key" | op item create --category="SSH_KEY" --ssh-generate-key=ed25519 --title="GitHub SSH Key" --vault="Personal" </dev/null)

        if [ $? -ne 0 ]; then
          echo "Error creating SSH key: $output" >&2
          exit 1
        fi
        echo "$output"
      register: create_ssh_key_result
      changed_when: false
      when:
        - configure_1password
        - github_ssh_key_check.rc != 0 or github_ssh_key_check.stdout == ""

    - name: Display SSH key creation result
      ansible.builtin.debug:
        var: create_ssh_key_result
      when: create_ssh_key_result is defined

    - name: Add 1Password SSH agent to .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: |
          # 1Password SSH agent
          export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
      when: configure_1password

    - name: Ensure 1Password SSH agent config directory exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/1Password/ssh"
        state: directory
        mode: '0700'
      when: configure_1password

    - name: Configure 1Password SSH agent to use Personal and Work vaults
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.config/1Password/ssh/agent.toml"
        content: |
          [[ssh-keys]]
          vault = "Personal"
          [[ssh-keys]]
          vault = "Work"
        mode: '0600'
      when: configure_1password

  rescue:
    - name: Display error message
      ansible.builtin.debug:
        msg: "1Password setup failed. Please check the error messages and try again."
      when: configure_1password
