---
- name: Configure 1Password
  block:
    - name: Check if 1Password configuration is requested
      set_fact:
        configure_1password: "{{ onepassword_email | default('') | length > 0 }}"

    - name: Display 1Password configuration status
      debug:
        msg: "1Password configuration is {{ 'enabled' if configure_1password else 'disabled' }}"

    - name: Ensure 1Password is installed
      homebrew_cask:
        name: 1password
        state: present
      when: configure_1password

    - name: Install 1Password CLI
      homebrew:
        name: 1password-cli
        state: present
      when: configure_1password

    - name: Check if 1Password CLI is configured
      command: op account list
      register: op_account_list
      changed_when: false
      failed_when: false
      when: configure_1password

    - name: Configure 1Password CLI
      command: op account add --address my.1password.com --email "{{ onepassword_email }}" --shorthand {{ onepassword_shorthand | default('my1password') }}
      when:
        - configure_1password
        - op_account_list.rc != 0
      register: op_config_result
      changed_when: op_config_result.rc == 0

    - name: Display 1Password CLI configuration result
      debug:
        var: op_config_result
      when: op_config_result is defined

    - name: Add 1Password SSH agent to .zshrc
      blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: |
          # 1Password SSH agent
          export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
      when: configure_1password

    - name: Ensure 1Password SSH agent config directory exists
      file:
        path: "{{ ansible_env.HOME }}/.config/1Password/ssh"
        state: directory
        mode: '0700'
      when: configure_1password

    - name: Configure 1Password SSH agent to use Personal and Work vaults
      copy:
        dest: "{{ ansible_env.HOME }}/.config/1Password/ssh/agent.toml"
        content: |
          [[ssh-keys]]
          vault = "Personal"

          [[ssh-keys]]
          vault = "Work"
        mode: '0600'
      when: configure_1password

  rescue:
    - name: Display error message
      debug:
        msg: "1Password setup failed. Please check the error messages and try again."
      when: configure_1password